// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NzWalksAPI.Data;

#nullable disable

namespace NzWalksAPI.Migrations
{
    [DbContext(typeof(WalkDbContext))]
    [Migration("20250515055347_seeding data8")]
    partial class seedingdata8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DifficultySet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("896a2fc8-5b65-4b2a-9468-5643993e148a"),
                            Name = "Hard "
                        },
                        new
                        {
                            Id = new Guid("3b91e7a1-6ac6-4b5f-801f-cbfb4351e43b"),
                            Name = "Medium "
                        },
                        new
                        {
                            Id = new Guid("44aaaa35-f8a5-452d-b10c-a1a753ec6359"),
                            Name = "Easy "
                        });
                });

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Regions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegionSet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01f5d410-6cdb-49f4-959e-44a18c387b51"),
                            Code = "AKL",
                            Name = "Aucklan",
                            RegionImageUrl = "https://images.pexels.com/photos/5169056/pexels-photo-5169056.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
                        },
                        new
                        {
                            Id = new Guid("f689fd5b-1bb4-4319-bd71-26f4a42cb057"),
                            Code = "NTL",
                            Name = "Northlan"
                        },
                        new
                        {
                            Id = new Guid("a5d43070-2af0-4f07-8622-8d6c69f3f4e0"),
                            Code = "BOP",
                            Name = "Bay Of Plent"
                        },
                        new
                        {
                            Id = new Guid("4eb24ed8-4dbd-43ad-9cf4-12d0ec4e70a3"),
                            Code = "STL",
                            Name = "Southland"
                        });
                });

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Walks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Walks", b =>
                {
                    b.HasOne("NzWalksAPI.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NzWalksAPI.Models.Domain.Regions", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
