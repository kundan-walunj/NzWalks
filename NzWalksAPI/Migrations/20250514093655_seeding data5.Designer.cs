// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NzWalksAPI.Data;

#nullable disable

namespace NzWalksAPI.Migrations
{
    [DbContext(typeof(WalkDbContext))]
    [Migration("20250514093655_seeding data5")]
    partial class seedingdata5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DifficultySet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c820387-853d-40e4-9e07-f1f4f9fe5bf1"),
                            Name = "Hard"
                        },
                        new
                        {
                            Id = new Guid("0f3e1105-2dc0-46af-8d8c-ad0954810842"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("44aaaa35-f8a5-452d-b10c-a1a753ec6359"),
                            Name = "Easy"
                        });
                });

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Regions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegionSet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c47b7142-3f9f-4bbd-80c2-8c29c4934729"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://images.pexels.com/photos/5169056/pexels-photo-5169056.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
                        },
                        new
                        {
                            Id = new Guid("f689fd5b-1bb4-4319-bd71-26f4a42cb057"),
                            Code = "NTL",
                            Name = "Northland"
                        },
                        new
                        {
                            Id = new Guid("a5d43070-2af0-4f07-8622-8d6c69f3f4e0"),
                            Code = "BOP",
                            Name = "Bay Of Plenty"
                        });
                });

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Walks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RegionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionsId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NzWalksAPI.Models.Domain.Walks", b =>
                {
                    b.HasOne("NzWalksAPI.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NzWalksAPI.Models.Domain.Regions", "Regions")
                        .WithMany()
                        .HasForeignKey("RegionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
